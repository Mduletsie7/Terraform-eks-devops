name: Kryptic-Terraform-EKS-DevOps
on:
  push:
    branches: [develop]
    
jobs:
  Build:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to ECR
      uses: docker/login-action@v3
      with:
        registry: 865494649634.dkr.ecr.us-east-1.amazonaws.com
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
    - name: Build 
      run: |
          echo "Navigate to the application directory"
          echo "Confirm directory"
          pwd && ls -al
          cd application
          ls 
          echo "Build the Docker image, tagging it with the current GitHub commit SHA"
          docker build -t kryptic-app-dev:${{ github.sha }} .
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
      with:
          image-ref: 'kryptic-app-dev:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

    - name: Push image to ECR if scan pass
      run: |
       # Tag the Docker image for the Amazon ECR repository using the same GitHub commit SHA
        docker tag kryptic-app-dev:${{ github.sha }} 865494649634.dkr.ecr.us-east-1.amazonaws.com/kryptic-ecr-repo-dev:${{ github.sha }}
       # Tag the Docker image for the Amazon ECR repository using the same GitHub commit SHA
        docker push 865494649634.dkr.ecr.us-east-1.amazonaws.com/kryptic-ecr-repo-dev:${{ github.sha }}

  K8S-Pull:
      runs-on: ubuntu-latest
      needs: Build
      environment: dev
      steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_ACCOUNT_REGION }}
          
      - name: Deploy to Kubernetes
        run: |
          pwd
          sed -i "s/\${GITHUB_SHA}/${{ github.sha }}/g" infrastructure/k8s/deployment.yaml
          cat infrastructure/k8s/deployment.yaml

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/
          # Configure AWS credentials
          aws eks update-kubeconfig --region "us-east-1" --name "kryptic-eks-cluster-dev"
          # Check current cluster
          kubectl config current-context

      - name: Apply Deployment 
        run: |
          if ! kubectl get deployment kryptic-eks-dev -n default; then
            kubectl apply -f infrastructure/k8s/
          else
            kubectl rollout restart deployment kryptic-eks-dev -n default
          fi
          
      - name: Check pods
        run: |
          kubectl get pods -n default
          kubectl get svc -n default kryptic-eks-dev